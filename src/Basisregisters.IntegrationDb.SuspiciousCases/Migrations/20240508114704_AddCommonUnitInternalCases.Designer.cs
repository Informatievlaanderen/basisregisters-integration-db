// <auto-generated />
using Basisregisters.IntegrationDb.SuspiciousCases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Basisregisters.IntegrationDb.SuspiciousCases.Migrations
{
    [DbContext(typeof(SuspiciousCasesContext))]
    [Migration("20240508114704_AddCommonUnitInternalCases")]
    partial class AddCommonUnitInternalCases
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Basisregisters.IntegrationDb.Schema.Views.SuspiciousCases.CurrentStreetNameWithoutLinkedRoadSegments", b =>
                {
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.Property<int>("StreetNamePersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("streetname_persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_current_street_name_without_linked_roadsegments", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                streetname_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_current_street_name_without_linked_roadsegments");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.ActiveAddresLinkedToMultipleBuildingUnits", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_active_address_linked_to_multiple_building_units", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_active_address_linked_to_multiple_building_units");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.ActiveAddressOutsideMunicipalityBounds", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_active_address_outside_municipality_bounds", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_active_address_outside_municipality_bounds");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.ActiveBuildingUnitLinkedToMultipleAddresses", b =>
                {
                    b.Property<int>("BuildingUnitPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("building_unit_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_building_unit_linked_to_multiple_addresses", "integration_suspicious_cases");

                    b.ToSqlQuery("SELECT\r\n                                persistent_local_id,\r\n                                building_unit_persistent_local_id,\r\n                                nis_code,\r\n                                CONCAT('Gebouweenheid-',  building_unit_persistent_local_id) as description\r\n                            FROM integration_suspicious_cases.view_building_unit_linked_to_multiple_addresses");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.ActiveBuildingUnitWithoutAddress", b =>
                {
                    b.Property<int>("BuildingUnitPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("building_unit_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_active_building_unit_without_address", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                building_unit_persistent_local_id,\r\n                                nis_code,\r\n                                CONCAT('Gebouweenheid-',  building_unit_persistent_local_id) as description\r\n                            FROM integration_suspicious_cases.view_active_building_unit_without_address");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.AddressLongerThanTwoYearsProposed", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_address_longer_than_two_years_proposed", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM  integration_suspicious_cases.view_address_longer_than_two_years_proposed");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.BuildingUnitsLongerThanTwoYearsPlanned", b =>
                {
                    b.Property<int>("BuildingUnitPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("building_unit_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_building_unit_longer_than_two_years_planned", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                building_unit_persistent_local_id,\r\n                                nis_code,\r\n                                CONCAT('Gebouweenheden-',  building_unit_persistent_local_id) as description\r\n                            FROM  integration_suspicious_cases.view_building_unit_longer_than_two_years_planned");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.BuildingsLongerThanTwoYearsPlanned", b =>
                {
                    b.Property<int>("BuildingPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("building_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_buildings_longer_than_two_years_planned", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                building_persistent_local_id,\r\n                                nis_code,\r\n                                CONCAT('Gebouw-',  building_persistent_local_id) as description\r\n                            FROM  integration_suspicious_cases.view_buildings_longer_than_two_years_planned");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.CurrentAddressLinkedWithBuildingUnitButNotWithParcel", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_current_address_linked_with_building_unit_but_not_with_parcel", "integration_suspicious_cases");

                    b.ToSqlQuery("SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_current_address_linked_with_building_unit_but_not_with_parcel");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.CurrentAddressWithSpecificationDerivedFromBuildingUnitWithoutLinkedBuildingUnit", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_current_address_with_specification_derived_from_building_unit_without_linked_building_unit", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_current_address_with_specification_derived_from_building_unit_without_linked_building_unit");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.CurrentAddressWithoutLinkedParcelOrBuildingUnit", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_current_address_without_linked_parcel_or_building_unit", "integration_suspicious_cases");

                    b.ToSqlQuery("SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_current_address_without_linked_parcel_or_building_unit");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.ProposedAddressWithoutLinkedParcelOrBuildingUnit", b =>
                {
                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_proposed_address_without_linked_parcel_or_building_unit", "integration_suspicious_cases");

                    b.ToSqlQuery("SELECT\r\n                                persistent_local_id,\r\n                                address_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_proposed_address_without_linked_parcel_or_building_unit");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.StreetNameLongerThanTwoYearsProposed", b =>
                {
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.Property<int>("StreetNamePersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("streetname_persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_streetname_longer_than_two_years_proposed", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                streetname_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM  integration_suspicious_cases.view_streetname_longer_than_two_years_proposed");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.StreetNameWithOnlyOneRoadSegmentToOnlyOneSide", b =>
                {
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PersistentLocalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("persistent_local_id");

                    b.Property<int>("StreetNamePersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("streetname_persistent_local_id");

                    b.ToTable((string)null);

                    b.ToView("view_current_street_name_with_only_one_roadsegment_to_only_one_side", "integration_suspicious_cases");

                    b.ToSqlQuery("\r\n                            SELECT\r\n                                persistent_local_id,\r\n                                streetname_persistent_local_id,\r\n                                nis_code,\r\n                                description\r\n                            FROM integration_suspicious_cases.view_current_street_name_with_only_one_roadsegment_to_only_one_side");
                });

            modelBuilder.Entity("Basisregisters.IntegrationDb.SuspiciousCases.Views.SuspiciousCaseCount", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("view_suspicious_cases_counts", "integration_suspicious_cases");

                    b.ToSqlQuery("select\r\n                                nis_code,\r\n                                count,\r\n                                type\r\n                            FROM integration_suspicious_cases.view_suspicious_cases_counts");
                });
#pragma warning restore 612, 618
        }
    }
}
